Programação orientada a objetos (POO, ou OOP segundo as suas siglas em inglês) é um paradigma 
de programação baseado no conceito de "objetos", que podem conter dados na forma de campos, 
também conhecidos como atributos, e códigos, na forma de procedimentos, também conhecidos como 
métodos. Uma característica de objetos é que um procedimento de objeto pode acessar, e geralmente 
modificar, os campos de dados do objeto com o qual eles estão associados (objetos possuem uma 
noção de "this" (este) ou "self" (próprio)).
Em POO, programas de computadores são projetados por meio da composição de objetos que interagem 
com outros.[1][2] Há uma diversidade significante de linguagens de POO, mas as mais populares 
são aquelas baseadas em classes, significando que objetos são instâncias de classes, que, 
normalmente, também determinam seu tipo.
Muitas das linguagens mais utilizadas são multiparadigmas que suportam programação orientada a 
objetos em maior ou menor grau, tipicamente em combinação com programação procedural imperativa. 
Linguagens orientadas a objeto significativas incluem Java, C++, C#, Python, Lua, PHP, Ruby, Perl, 
Object Pascal, Objective-C, Dart, Swift, Scala, Common Lisp e Smalltalk.
A programação orientada a objetos utiliza objetos, porém nem todas das técnicas e estruturas 
associadas são suportadas diretamente em linguagens que afirmam suportar a POO. 
As características listadas abaixo são, entretanto, comuns entre linguagens 
consideradas fortemente orientadas a classes e objetos (ou multiparadigma com suporte a POO), 
com exceções notáveis mencionadas